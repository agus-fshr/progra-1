<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="operations_8h" local="yes">operations.h</includes>
    <includes refid="calculator__front_8h" local="yes">calculator_front.h</includes>
    <incdepgraph>
      <node id="4">
        <label>calculator_front.h</label>
        <link refid="calculator__front_8h"/>
      </node>
      <node id="1">
        <label>main.c</label>
        <link refid="main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>operations.h</label>
        <link refid="operations_8h"/>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="main_8c_1a30892ce590446910ea3159e79f2f31f3" prot="public" static="no">
        <name>MAX_OPERATORS</name>
        <initializer>8</initializer>
        <briefdescription>
<para>Number of operators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="45" column="9" bodyfile="main.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a55ac6ef9c85525970be8095f53bb61e1" prot="public" static="no">
        <name>EXIT_CHAR</name>
        <initializer>&apos;q&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="47" column="9" bodyfile="main.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1ad953081808cd2157c3e3c2154c0028d0" prot="public" static="no">
        <name>HELP_CHAR</name>
        <initializer>&apos;?&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="48" column="9" bodyfile="main.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a92ab67a2bd99b3a1f840258f0e39d6cc" prot="public" static="no">
        <name>SUM_CHAR</name>
        <initializer>&apos;+&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="49" column="9" bodyfile="main.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1ad076594cac1704aa54d7dec4ae0cdfa0" prot="public" static="no">
        <name>SUBS_CHAR</name>
        <initializer>&apos;-&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="50" column="9" bodyfile="main.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a439522f32e6ae47ed931006e870ae829" prot="public" static="no">
        <name>DIV_CHAR</name>
        <initializer>&apos;/&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="51" column="9" bodyfile="main.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a199270bd107c27fb585c3d1dc8bcd0eb" prot="public" static="no">
        <name>PROD_CHAR</name>
        <initializer>&apos;*&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="52" column="9" bodyfile="main.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1ac8bbff2acc59ee28d07e64115067653f" prot="public" static="no">
        <name>POW_CHAR</name>
        <initializer>&apos;^&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="53" column="9" bodyfile="main.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1ade3b7e0f1dfb9ff2a924b311e81c3978" prot="public" static="no">
        <name>FACT_CHAR</name>
        <initializer>&apos;!&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="54" column="9" bodyfile="main.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a81468e975b731555b779e56ffd2ae4a3" prot="public" static="no">
        <name>SIN_CHAR</name>
        <initializer>&apos;s&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="55" column="9" bodyfile="main.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1ae3f20f389ec84487be54dbd4577eff4f" prot="public" static="no">
        <name>COS_CHAR</name>
        <initializer>&apos;c&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="56" column="9" bodyfile="main.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a9df18d35580a7d56e769717cc94bbf11" prot="public" static="no">
        <name>TAN_CHAR</name>
        <initializer>&apos;t&apos;</initializer>
        <briefdescription>
<para>unused </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="58" column="9" bodyfile="main.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a81054e8cd529a75320b2fa9c55fde6d6" prot="public" static="no">
        <name>ASIN_CHAR</name>
        <initializer>&apos;a&apos;</initializer>
        <briefdescription>
<para>unused </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="59" column="9" bodyfile="main.c" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a790b383129074e0e6d5c3a746926873c" prot="public" static="no">
        <name>ACOS_CHAR</name>
        <initializer>&apos;b&apos;</initializer>
        <briefdescription>
<para>unused </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="60" column="9" bodyfile="main.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a91760d1ccad36dfafd8c2995ccacd7ca" prot="public" static="no">
        <name>ATAN_CHAR</name>
        <initializer>&apos;d&apos;</initializer>
        <briefdescription>
<para>unused </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="61" column="9" bodyfile="main.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="main_8c_1a5278fef9d11d8adad50c93146ae9312b" prot="public" static="no" mutable="no">
        <type>double(*</type>
        <definition>double(* actions[MAX_OPERATORS])(double, double)</definition>
        <argsstring>[MAX_OPERATORS])(double, double)</argsstring>
        <name>actions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="125" column="1" bodyfile="main.c" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a72b1e1e4e69b91f15c2d5b9b09aedb43" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char operators[MAX_OPERATORS]</definition>
        <argsstring>[MAX_OPERATORS]</argsstring>
        <name>operators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="126" column="6" bodyfile="main.c" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8c_1a8fb26976d3cfd2e8eaeff340ba9a2e46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int find_operator</definition>
        <argsstring>(char c)</argsstring>
        <name>find_operator</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Finds the index of the operator represented by a char. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>The identifier of the operator to search for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The operation index </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="201" column="5" bodyfile="main.c" bodystart="201" bodyend="209" declfile="main.c" declline="74" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a965dd2a0135feedf149965b2fba5f861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int add_operation</definition>
        <argsstring>(char operator_char, double(*callback)(double, double))</argsstring>
        <name>add_operation</name>
        <param>
          <type>char</type>
          <declname>operator_char</declname>
        </param>
        <param>
          <type>double(*)(double, double)</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Adds an operator to the array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>operator_char</parametername>
</parameternamelist>
<parameterdescription>
<para>The char represeting the operation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callback</parametername>
</parameternamelist>
<parameterdescription>
<para>The function to associate to the operator </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if succesful, 0 otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="189" column="5" bodyfile="main.c" bodystart="189" bodyend="199" declfile="main.c" declline="83" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ac785bbcb0a916d38d0eea3cd64b9d174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double integer_power_wrapper</definition>
        <argsstring>(double a, double b)</argsstring>
        <name>integer_power_wrapper</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Wraps power function due to formatting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand (base) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand (exponent) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of a^b </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="211" column="8" bodyfile="main.c" bodystart="211" bodyend="213" declfile="main.c" declline="92" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1aa738137b9ad5c17ecb204845fc2c591f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double factorial_wrapper</definition>
        <argsstring>(double a, double b)</argsstring>
        <name>factorial_wrapper</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Wraps factorial function due to formatting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand (to take the factorial of) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand (nothing) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of a! </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="215" column="8" bodyfile="main.c" bodystart="215" bodyend="220" declfile="main.c" declline="101" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ae6271594ff3d328bc3eaca1d1dacbd8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double sin_wrapper</definition>
        <argsstring>(double a, double b)</argsstring>
        <name>sin_wrapper</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Wraps sin function due to formatting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand (to calc sin of) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand (nothing) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of sin(a) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="222" column="8" bodyfile="main.c" bodystart="222" bodyend="224" declfile="main.c" declline="110" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a56e3f777c97a79830170044350559f69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double cos_wrapper</definition>
        <argsstring>(double a, double b)</argsstring>
        <name>cos_wrapper</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Wraps cos function due to formatting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Left operand (to calc cos of) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Right operand (nothing) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Result of cos(a) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="226" column="8" bodyfile="main.c" bodystart="226" bodyend="228" declfile="main.c" declline="119" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="main.c" line="132" column="5" bodyfile="main.c" bodystart="132" bodyend="186"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>@file<sp/><sp/><sp/><sp/><sp/>main.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>@brief<sp/><sp/><sp/><sp/>Implements<sp/>a<sp/>calculator</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>@author<sp/><sp/><sp/>Grupo<sp/>7</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>TP8<sp/>-<sp/>Ejercicio<sp/>5<sp/>-<sp/>Grupo<sp/>7<sp/>(FISHER,<sp/>MARTINEZ<sp/>TANOIRA,<sp/>SBRUZZI,<sp/>OMS)</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>Consigna:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Implementar<sp/>una<sp/>calculadora<sp/>simple,<sp/>a<sp/>la<sp/>que<sp/>se<sp/>le<sp/>puedan<sp/>ir<sp/>agregando<sp/>nuevas<sp/>funciones.<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Se<sp/>generarán<sp/>dos<sp/>arreglos<sp/>(globales):<sp/>uno<sp/>contendrá<sp/>operandos,<sp/></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>el<sp/>otro<sp/>punteros<sp/>a<sp/>la<sp/>función<sp/>que<sp/>debe<sp/>realizar<sp/>ese<sp/>operando,<sp/>que<sp/>se<sp/>completarán<sp/>de<sp/>manera<sp/>dinámica<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>al<sp/>inicializarse<sp/>el<sp/>programa.Se<sp/>le<sp/>solicitará<sp/>al<sp/>usuario<sp/>que<sp/>ingrese<sp/>la<sp/>cuenta<sp/>que<sp/>desea<sp/>realizar,<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>de<sp/>la<sp/>forma<sp/>xxxx<sp/>operador<sp/>yyyy<sp/>(ejemplo:<sp/>5<sp/>+<sp/>3)Finalmente<sp/>deberá<sp/>mostrar<sp/>el<sp/>resultado<sp/>obtenido.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>La<sp/>calculadora<sp/>debe<sp/>implementar<sp/>como<sp/>mínimo:<sp/>suma,<sp/>resta,<sp/>multiplicación,<sp/>división<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>potenciación(puede<sp/>implementarse<sp/>solo<sp/>para<sp/>exponentes<sp/>enteros).</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>Implementación:</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>1)<sp/>Se<sp/>implementan<sp/>las<sp/>funciones<sp/>suma,<sp/>resta,<sp/>division,<sp/>multiplicacion,</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factorial,<sp/>coseno,<sp/>seno.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>2)<sp/>Para<sp/>las<sp/>funciones<sp/>matemáticas<sp/>de<sp/>un<sp/>solo<sp/>parámetro,<sp/>se<sp/>utiliza<sp/>únicamente</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>el<sp/>primero<sp/>(de<sp/>la<sp/>izquierda).</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>3)<sp/>Se<sp/>permite<sp/>calcular<sp/>indefinidamente<sp/>hasta<sp/>ingresar<sp/>una<sp/>secuencia<sp/>de<sp/>escape</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>4)<sp/>Se<sp/>reduce<sp/>de<sp/>manera<sp/>dinámica<sp/>el<sp/>argumento<sp/>de<sp/>las<sp/>funciones<sp/>basadas<sp/>en<sp/>polin.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>de<sp/>taylor<sp/>para<sp/>aproximarlo<sp/>al<sp/>centro,<sp/>en<sp/>0.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>5)<sp/>Las<sp/>funciones<sp/>trigonometricas<sp/>están<sp/>probadas<sp/>con<sp/>ángulos<sp/>de<sp/>hasta<sp/>21<sp/>dígitos.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>6)<sp/>El<sp/>factorial<sp/>más<sp/>alto<sp/>es<sp/>el<sp/>170!</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>7)<sp/>Se<sp/>truncan<sp/>aquellos<sp/>valores<sp/>que<sp/>se<sp/>requieren<sp/>de<sp/>manera<sp/>entera.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/******************************************</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INCLUDE<sp/>HEADER<sp/>FILES<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*****************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="operations_8h" kindref="compound">operations.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="calculator__front_8h" kindref="compound">calculator_front.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/************************************************</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>CONSTANT<sp/>AND<sp/>MACRO<sp/>DEFINITIONS<sp/>USING<sp/>#DEFINE<sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_OPERATORS<sp/>8<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EXIT_CHAR<sp/>&apos;q&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HELP_CHAR<sp/>&apos;?&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUM_CHAR<sp/><sp/>&apos;+&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SUBS_CHAR<sp/>&apos;-&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DIV_CHAR<sp/><sp/>&apos;/&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROD_CHAR<sp/>&apos;*&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>POW_CHAR<sp/><sp/>&apos;^&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FACT_CHAR<sp/>&apos;!&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIN_CHAR<sp/><sp/>&apos;s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COS_CHAR<sp/><sp/>&apos;c&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TAN_CHAR<sp/><sp/>&apos;t&apos;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ASIN_CHAR<sp/>&apos;a&apos;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ACOS_CHAR<sp/>&apos;b&apos;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ATAN_CHAR<sp/>&apos;d&apos;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/***********************</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>FUNCTION<sp/>PROTOTYPES<sp/>*</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>***********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a8fb26976d3cfd2e8eaeff340ba9a2e46" kindref="member">find_operator</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a965dd2a0135feedf149965b2fba5f861" kindref="member">add_operation</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>operator_char,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>(*callback)<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ac785bbcb0a916d38d0eea3cd64b9d174" kindref="member">integer_power_wrapper</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="main_8c_1aa738137b9ad5c17ecb204845fc2c591f" kindref="member">factorial_wrapper</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ae6271594ff3d328bc3eaca1d1dacbd8c" kindref="member">sin_wrapper</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a56e3f777c97a79830170044350559f69" kindref="member">cos_wrapper</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">/********************</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>GLOBAL<sp/>VARIABLES<sp/>*</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">double<sp/>(*<ref refid="main_8c_1a5278fef9d11d8adad50c93146ae9312b" kindref="member">actions</ref>[<ref refid="main_8c_1a30892ce590446910ea3159e79f2f31f3" kindref="member">MAX_OPERATORS</ref>])<sp/>(double,<sp/>double);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a72b1e1e4e69b91f15c2d5b9b09aedb43" kindref="member">operators</ref>[<ref refid="main_8c_1a30892ce590446910ea3159e79f2f31f3" kindref="member">MAX_OPERATORS</ref>];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/********************</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initial_err<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>initial_err<sp/>*=<sp/><ref refid="main_8c_1a965dd2a0135feedf149965b2fba5f861" kindref="member">add_operation</ref>(<ref refid="main_8c_1a92ab67a2bd99b3a1f840258f0e39d6cc" kindref="member">SUM_CHAR</ref>,<sp/><ref refid="operations_8c_1aa696b61cebd54eea6ae72f2da02ed1d5" kindref="member">sum</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>initial_err<sp/>*=<sp/><ref refid="main_8c_1a965dd2a0135feedf149965b2fba5f861" kindref="member">add_operation</ref>(<ref refid="main_8c_1ad076594cac1704aa54d7dec4ae0cdfa0" kindref="member">SUBS_CHAR</ref>,<sp/><ref refid="operations_8c_1a1755e84ac77d088cbdf6625193039b4e" kindref="member">substraction</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>initial_err<sp/>*=<sp/><ref refid="main_8c_1a965dd2a0135feedf149965b2fba5f861" kindref="member">add_operation</ref>(<ref refid="main_8c_1a439522f32e6ae47ed931006e870ae829" kindref="member">DIV_CHAR</ref>,<sp/><ref refid="operations_8c_1a5eb1fb5a402a348e8c431bd811653a34" kindref="member">division</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>initial_err<sp/>*=<sp/><ref refid="main_8c_1a965dd2a0135feedf149965b2fba5f861" kindref="member">add_operation</ref>(<ref refid="main_8c_1a199270bd107c27fb585c3d1dc8bcd0eb" kindref="member">PROD_CHAR</ref>,<sp/><ref refid="operations_8c_1aff47c73e752280f9873b8fe428ca55a8" kindref="member">product</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>initial_err<sp/>*=<sp/><ref refid="main_8c_1a965dd2a0135feedf149965b2fba5f861" kindref="member">add_operation</ref>(<ref refid="main_8c_1ac8bbff2acc59ee28d07e64115067653f" kindref="member">POW_CHAR</ref>,<sp/><ref refid="main_8c_1ac785bbcb0a916d38d0eea3cd64b9d174" kindref="member">integer_power_wrapper</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>initial_err<sp/>*=<sp/><ref refid="main_8c_1a965dd2a0135feedf149965b2fba5f861" kindref="member">add_operation</ref>(<ref refid="main_8c_1ade3b7e0f1dfb9ff2a924b311e81c3978" kindref="member">FACT_CHAR</ref>,<sp/><ref refid="main_8c_1aa738137b9ad5c17ecb204845fc2c591f" kindref="member">factorial_wrapper</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>initial_err<sp/>*=<sp/><ref refid="main_8c_1a965dd2a0135feedf149965b2fba5f861" kindref="member">add_operation</ref>(<ref refid="main_8c_1a81468e975b731555b779e56ffd2ae4a3" kindref="member">SIN_CHAR</ref>,<sp/><ref refid="main_8c_1ae6271594ff3d328bc3eaca1d1dacbd8c" kindref="member">sin_wrapper</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>initial_err<sp/>*=<sp/><ref refid="main_8c_1a965dd2a0135feedf149965b2fba5f861" kindref="member">add_operation</ref>(<ref refid="main_8c_1ae3f20f389ec84487be54dbd4577eff4f" kindref="member">COS_CHAR</ref>,<sp/><ref refid="main_8c_1a56e3f777c97a79830170044350559f69" kindref="member">cos_wrapper</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(initial_err<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Algo<sp/>ha<sp/>fallado<sp/>en<sp/>la<sp/>etapa<sp/>de<sp/>configuracion.<sp/>Lo<sp/>sentimos!<sp/>:c\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>op1,<sp/>op2;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>operation_char;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>operation_index<sp/>=<sp/><ref refid="calculator__front_8h_1a0742eaeef55ee5d7c250920d24c44f2c" kindref="member">OPERATOR_NOT_FOUND</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>valid_input<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exit<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="calculator__front_8c_1abc40cd622f423abf44084c8f8595f57f" kindref="member">clear_screen</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Bienvenido!<sp/>Esto<sp/>es<sp/>una<sp/>calculadora.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="calculator__front_8c_1a3518f70aefc3425321fb11a873583483" kindref="member">print_calculator_tips</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!exit)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!valid_input<sp/>&amp;&amp;<sp/>!exit){</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Ingrese<sp/>una<sp/>operacion<sp/>valida<sp/>en<sp/>formato<sp/>\&quot;X<sp/>operador<sp/>Y\&quot;,<sp/>\&quot;X<sp/>%c<sp/>Y\&quot;<sp/>para<sp/>ayuda,<sp/>o<sp/>\&quot;X<sp/>%c<sp/>Y\&quot;<sp/>para<sp/>salir:\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="main_8c_1ad953081808cd2157c3e3c2154c0028d0" kindref="member">HELP_CHAR</ref>,<sp/><ref refid="main_8c_1a55ac6ef9c85525970be8095f53bb61e1" kindref="member">EXIT_CHAR</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_input<sp/>=<sp/><ref refid="calculator__front_8c_1a943559f6db96f9f604d44e1e47f58c67" kindref="member">parse_input</ref>(&amp;op1,<sp/>&amp;op2,<sp/>&amp;operation_char);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((operation_index<sp/>=<sp/><ref refid="main_8c_1a8fb26976d3cfd2e8eaeff340ba9a2e46" kindref="member">find_operator</ref>(operation_char))<sp/>==<sp/><ref refid="calculator__front_8h_1a0742eaeef55ee5d7c250920d24c44f2c" kindref="member">OPERATOR_NOT_FOUND</ref>)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_input<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>op<sp/>was<sp/>not<sp/>found<sp/>the<sp/>input<sp/>was<sp/>not<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(operation_char<sp/>==<sp/><ref refid="main_8c_1ad953081808cd2157c3e3c2154c0028d0" kindref="member">HELP_CHAR</ref>){</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="calculator__front_8c_1a0787877a67777cda173b9fc2766ac65d" kindref="member">print_operators</ref>(<ref refid="main_8c_1a72b1e1e4e69b91f15c2d5b9b09aedb43" kindref="member">operators</ref>,<sp/><ref refid="main_8c_1a30892ce590446910ea3159e79f2f31f3" kindref="member">MAX_OPERATORS</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="calculator__front_8c_1a3518f70aefc3425321fb11a873583483" kindref="member">print_calculator_tips</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operation_char<sp/>==<sp/><ref refid="main_8c_1a55ac6ef9c85525970be8095f53bb61e1" kindref="member">EXIT_CHAR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exits<sp/>the<sp/>calculator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!exit)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="main_8c_1a5278fef9d11d8adad50c93146ae9312b" kindref="member">actions</ref>[operation_index](op1,<sp/>op2);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;=<sp/>%.10g\n&quot;</highlight><highlight class="normal">,<sp/>result);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//print_operation_result(op1,<sp/>op2,<sp/>operators[operation_index],<sp/>result);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valid_input<sp/>=<sp/>0;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Takes<sp/>next<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="calculator__front_8c_1abc40cd622f423abf44084c8f8595f57f" kindref="member">clear_screen</ref>();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Hasta<sp/>la<sp/>proxima!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a965dd2a0135feedf149965b2fba5f861" kindref="member">add_operation</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>operator_char,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>(*callback)<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="main_8c_1a30892ce590446910ea3159e79f2f31f3" kindref="member">MAX_OPERATORS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="main_8c_1a5278fef9d11d8adad50c93146ae9312b" kindref="member">actions</ref>[i]<sp/>==<sp/>NULL)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>space<sp/>found!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1a5278fef9d11d8adad50c93146ae9312b" kindref="member">actions</ref>[i]<sp/>=<sp/>callback;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1a72b1e1e4e69b91f15c2d5b9b09aedb43" kindref="member">operators</ref>[i]<sp/>=<sp/>operator_char;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>operator<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>without<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>empty<sp/>space<sp/>found,<sp/>return<sp/>with<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a8fb26976d3cfd2e8eaeff340ba9a2e46" kindref="member">find_operator</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="main_8c_1a30892ce590446910ea3159e79f2f31f3" kindref="member">MAX_OPERATORS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c<sp/>==<sp/><ref refid="main_8c_1a72b1e1e4e69b91f15c2d5b9b09aedb43" kindref="member">operators</ref>[i])<sp/>{<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Operator<sp/>matches<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="calculator__front_8h_1a0742eaeef55ee5d7c250920d24c44f2c" kindref="member">OPERATOR_NOT_FOUND</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>with<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ac785bbcb0a916d38d0eea3cd64b9d174" kindref="member">integer_power_wrapper</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="operations_8c_1a6826b74edd12867f0ddd9e85f0e686f4" kindref="member">integer_power</ref>(a,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>b);</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="main_8c_1aa738137b9ad5c17ecb204845fc2c591f" kindref="member">factorial_wrapper</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="operations_8c_1ac97d6387086b6fd0b299393d23da9e64" kindref="member">factorial</ref>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>a);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0/0.0;<sp/></highlight><highlight class="comment">//<sp/>If<sp/>input<sp/>is<sp/>invalid,<sp/>returns<sp/>NaN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ae6271594ff3d328bc3eaca1d1dacbd8c" kindref="member">sin_wrapper</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="operations_8c_1a3be967db2043b681fb909184816a2531" kindref="member">sin</ref>(a);</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a56e3f777c97a79830170044350559f69" kindref="member">cos_wrapper</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="operations_8c_1a7a7d08a90f118f85aae24f1ed5a2b04f" kindref="member">cos</ref>(a);</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="main.c"/>
  </compounddef>
</doxygen>
