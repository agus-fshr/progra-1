.TH "main.c" 3 "Mon May 10 2021" "Calculator" \" -*- nroff -*-
.ad l
.nh
.SH NAME
main.c
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include 'operations\&.h'\fP
.br
\fC#include 'calculator_front\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBMAX_OPERATORS\fP   8"
.br
.RI "Number of operators\&. "
.ti -1c
.RI "#define \fBEXIT_CHAR\fP   'q'"
.br
.ti -1c
.RI "#define \fBHELP_CHAR\fP   '?'"
.br
.ti -1c
.RI "#define \fBSUM_CHAR\fP   '+'"
.br
.ti -1c
.RI "#define \fBSUBS_CHAR\fP   '\-'"
.br
.ti -1c
.RI "#define \fBDIV_CHAR\fP   '/'"
.br
.ti -1c
.RI "#define \fBPROD_CHAR\fP   '*'"
.br
.ti -1c
.RI "#define \fBPOW_CHAR\fP   '^'"
.br
.ti -1c
.RI "#define \fBFACT_CHAR\fP   '!'"
.br
.ti -1c
.RI "#define \fBSIN_CHAR\fP   's'"
.br
.ti -1c
.RI "#define \fBCOS_CHAR\fP   'c'"
.br
.ti -1c
.RI "#define \fBTAN_CHAR\fP   't'"
.br
.RI "unused "
.ti -1c
.RI "#define \fBASIN_CHAR\fP   'a'"
.br
.RI "unused "
.ti -1c
.RI "#define \fBACOS_CHAR\fP   'b'"
.br
.RI "unused "
.ti -1c
.RI "#define \fBATAN_CHAR\fP   'd'"
.br
.RI "unused "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBfind_operator\fP (char c)"
.br
.RI "Finds the index of the operator represented by a char\&. "
.ti -1c
.RI "int \fBadd_operation\fP (char operator_char, double(*callback)(double, double))"
.br
.RI "Adds an operator to the array\&. "
.ti -1c
.RI "double \fBinteger_power_wrapper\fP (double a, double b)"
.br
.RI "Wraps power function due to formatting\&. "
.ti -1c
.RI "double \fBfactorial_wrapper\fP (double a, double b)"
.br
.RI "Wraps factorial function due to formatting\&. "
.ti -1c
.RI "double \fBsin_wrapper\fP (double a, double b)"
.br
.RI "Wraps sin function due to formatting\&. "
.ti -1c
.RI "double \fBcos_wrapper\fP (double a, double b)"
.br
.RI "Wraps cos function due to formatting\&. "
.ti -1c
.RI "int \fBmain\fP (void)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "double(* \fBactions\fP [\fBMAX_OPERATORS\fP])(double, double)"
.br
.ti -1c
.RI "char \fBoperators\fP [\fBMAX_OPERATORS\fP]"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define ACOS_CHAR   'b'"

.PP
unused 
.SS "#define ASIN_CHAR   'a'"

.PP
unused 
.SS "#define ATAN_CHAR   'd'"

.PP
unused 
.SS "#define COS_CHAR   'c'"

.SS "#define DIV_CHAR   '/'"

.SS "#define EXIT_CHAR   'q'"

.SS "#define FACT_CHAR   '!'"

.SS "#define HELP_CHAR   '?'"

.SS "#define MAX_OPERATORS   8"

.PP
Number of operators\&. 
.SS "#define POW_CHAR   '^'"

.SS "#define PROD_CHAR   '*'"

.SS "#define SIN_CHAR   's'"

.SS "#define SUBS_CHAR   '\-'"

.SS "#define SUM_CHAR   '+'"

.SS "#define TAN_CHAR   't'"

.PP
unused 
.SH "Function Documentation"
.PP 
.SS "int add_operation (char operator_char, double(*)(double, double) callback)"

.PP
Adds an operator to the array\&. 
.PP
\fBParameters\fP
.RS 4
\fIoperator_char\fP The char represeting the operation 
.br
\fIcallback\fP The function to associate to the operator 
.RE
.PP
\fBReturns\fP
.RS 4
1 if succesful, 0 otherwise 
.RE
.PP

.SS "double cos_wrapper (double a, double b)"

.PP
Wraps cos function due to formatting\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP Left operand (to calc cos of) 
.br
\fIb\fP Right operand (nothing) 
.RE
.PP
\fBReturns\fP
.RS 4
Result of cos(a) 
.RE
.PP

.SS "double factorial_wrapper (double a, double b)"

.PP
Wraps factorial function due to formatting\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP Left operand (to take the factorial of) 
.br
\fIb\fP Right operand (nothing) 
.RE
.PP
\fBReturns\fP
.RS 4
Result of a! 
.RE
.PP

.SS "int find_operator (char c)"

.PP
Finds the index of the operator represented by a char\&. 
.PP
\fBParameters\fP
.RS 4
\fIc\fP The identifier of the operator to search for 
.RE
.PP
\fBReturns\fP
.RS 4
The operation index 
.RE
.PP

.SS "double integer_power_wrapper (double a, double b)"

.PP
Wraps power function due to formatting\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP Left operand (base) 
.br
\fIb\fP Right operand (exponent) 
.RE
.PP
\fBReturns\fP
.RS 4
Result of a^b 
.RE
.PP

.SS "int main (void)"

.SS "double sin_wrapper (double a, double b)"

.PP
Wraps sin function due to formatting\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP Left operand (to calc sin of) 
.br
\fIb\fP Right operand (nothing) 
.RE
.PP
\fBReturns\fP
.RS 4
Result of sin(a) 
.RE
.PP

.SH "Variable Documentation"
.PP 
.SS "double(* actions[\fBMAX_OPERATORS\fP])(double, double) (double, double)"

.SS "char operators[\fBMAX_OPERATORS\fP]"

.SH "Author"
.PP 
Generated automatically by Doxygen for Calculator from the source code\&.
