<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_calculator__front_8h" xml:lang="en-US">
<title>calculator_front.h File Reference</title>
<indexterm><primary>calculator_front.h</primary></indexterm>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_calculator__front_8h_1a0742eaeef55ee5d7c250920d24c44f2c">OPERATOR_NOT_FOUND</link>   -1</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_calculator__front_8h_1a943559f6db96f9f604d44e1e47f58c67">parse_input</link> (double *op1, double *op2, char *operator)</para>

<para>Reads two operands and an operator from stdin. </para>
</listitem>
            <listitem><para>void <link linkend="_calculator__front_8h_1a3518f70aefc3425321fb11a873583483">print_calculator_tips</link> (void)</para>

<para>Prints tips for calculator use. </para>
</listitem>
            <listitem><para>void <link linkend="_calculator__front_8h_1a0787877a67777cda173b9fc2766ac65d">print_operators</link> (char <link linkend="_main_8c_1a72b1e1e4e69b91f15c2d5b9b09aedb43">operators</link>[], int op_num)</para>

<para>Prints available operators. </para>
</listitem>
            <listitem><para>void <link linkend="_calculator__front_8h_1ad43229862c96d5558c5a6a30df5a3fbd">print_operation_result</link> (double op1, double op2, char operation, double result)</para>

<para>Prints the expression to resolve and the result. </para>
</listitem>
            <listitem><para>void <link linkend="_calculator__front_8h_1abc40cd622f423abf44084c8f8595f57f">clear_screen</link> (void)</para>

<para>Clears terminal in an OS-specific basis. </para>
</listitem>
            <listitem><para>void <link linkend="_calculator__front_8h_1ad28147e4bdcc806db622550f264e57d5">flush_stdin</link> (char limit)</para>

<para>Flushes the stdin buffer. Takes characters from stdin until limit is found. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_calculator__front_8h_1a0742eaeef55ee5d7c250920d24c44f2c"/>    <section>
    <title>OPERATOR_NOT_FOUND</title>
<indexterm><primary>OPERATOR_NOT_FOUND</primary><secondary>calculator_front.h</secondary></indexterm>
<indexterm><primary>calculator_front.h</primary><secondary>OPERATOR_NOT_FOUND</secondary></indexterm>
<para><computeroutput>#define OPERATOR_NOT_FOUND   -1</computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_calculator__front_8h_1abc40cd622f423abf44084c8f8595f57f"/>    <section>
    <title>clear_screen()</title>
<indexterm><primary>clear_screen</primary><secondary>calculator_front.h</secondary></indexterm>
<indexterm><primary>calculator_front.h</primary><secondary>clear_screen</secondary></indexterm>
<para><computeroutput>void clear_screen (void )</computeroutput></para><para>

<para>Clears terminal in an OS-specific basis. </para>
</para>
    </section><anchor xml:id="_calculator__front_8h_1ad28147e4bdcc806db622550f264e57d5"/>    <section>
    <title>flush_stdin()</title>
<indexterm><primary>flush_stdin</primary><secondary>calculator_front.h</secondary></indexterm>
<indexterm><primary>calculator_front.h</primary><secondary>flush_stdin</secondary></indexterm>
<para><computeroutput>void flush_stdin (char limit)</computeroutput></para><para>

<para>Flushes the stdin buffer. Takes characters from stdin until limit is found. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>limit</entry>
                                <entry>
<para>Character that indicates where to stop flushing </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_calculator__front_8h_1a943559f6db96f9f604d44e1e47f58c67"/>    <section>
    <title>parse_input()</title>
<indexterm><primary>parse_input</primary><secondary>calculator_front.h</secondary></indexterm>
<indexterm><primary>calculator_front.h</primary><secondary>parse_input</secondary></indexterm>
<para><computeroutput>int parse_input (double * op1, double * op2, char * operator)</computeroutput></para><para>

<para>Reads two operands and an operator from stdin. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>op1</entry>
                                <entry>
<para>Pointer to the variable that stores the first operand </para>
</entry>
                            </row>
                            <row>
                                <entry>op2</entry>
                                <entry>
<para>Pointer to the variable that stores the second operand </para>
</entry>
                            </row>
                            <row>
                                <entry>operator</entry>
                                <entry>
<para>Pointer to the variable that stores the operator char representation </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>0 if there was an error, 1 otherwise. </para>
</formalpara>
</para>
    </section><anchor xml:id="_calculator__front_8h_1a3518f70aefc3425321fb11a873583483"/>    <section>
    <title>print_calculator_tips()</title>
<indexterm><primary>print_calculator_tips</primary><secondary>calculator_front.h</secondary></indexterm>
<indexterm><primary>calculator_front.h</primary><secondary>print_calculator_tips</secondary></indexterm>
<para><computeroutput>void print_calculator_tips (void )</computeroutput></para><para>

<para>Prints tips for calculator use. </para>
</para>
    </section><anchor xml:id="_calculator__front_8h_1ad43229862c96d5558c5a6a30df5a3fbd"/>    <section>
    <title>print_operation_result()</title>
<indexterm><primary>print_operation_result</primary><secondary>calculator_front.h</secondary></indexterm>
<indexterm><primary>calculator_front.h</primary><secondary>print_operation_result</secondary></indexterm>
<para><computeroutput>void print_operation_result (double op1, double op2, char operation, double result)</computeroutput></para><para>

<para>Prints the expression to resolve and the result. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>op1</entry>
                                <entry>
<para>Left operand </para>
</entry>
                            </row>
                            <row>
                                <entry>op2</entry>
                                <entry>
<para>Right operand </para>
</entry>
                            </row>
                            <row>
                                <entry>operation</entry>
                                <entry>
<para>Char representing operation </para>
</entry>
                            </row>
                            <row>
                                <entry>result</entry>
                                <entry>
<para>The operation result </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
    </section><anchor xml:id="_calculator__front_8h_1a0787877a67777cda173b9fc2766ac65d"/>    <section>
    <title>print_operators()</title>
<indexterm><primary>print_operators</primary><secondary>calculator_front.h</secondary></indexterm>
<indexterm><primary>calculator_front.h</primary><secondary>print_operators</secondary></indexterm>
<para><computeroutput>void print_operators (char operators[], int op_num)</computeroutput></para><para>

<para>Prints available operators. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>operators</entry>
                                <entry>
<para>Array containing every operator-representing char </para>
</entry>
                            </row>
                            <row>
                                <entry>op_num</entry>
                                <entry>
<para>Number of operators </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
</section>
